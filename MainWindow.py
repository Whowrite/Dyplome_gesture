import sys
import mediapipe as mp
from PyQt5.QtWidgets import QApplication, QLabel, QWidget, QMainWindow, QPushButton, QScrollArea, QFrame, QHBoxLayout, \
    QGraphicsOpacityEffect, QMessageBox
from PyQt5.QtGui import QImage, QPixmap, QFont, QIcon, QTransform, QMovie
from PyQt5.QtCore import QTimer, Qt, QSize
from functools import partial
import LelelCounting, SettingsModule, RebuildsComponents, UserLevelsModule, Music
import requests
from packaging import version

class MainWindow():
    def __init__(self):
        self.current_game_level = "Undefined123"
        self.widgetsColor = ["#9EFFA5", "#DAFFDF"]
        self.widgetsLanguage = 0
        self.widgetsText = {
            "title_window": ['–ü–æ—Ç—Ä–µ–Ω—É—î–º–æ –≤–∞—à—ñ –Ω–µ–π—Ä–æ–Ω–∏', 'ToTrainYourNeurons'],
            "button_start": ['–°–ø—Ä–æ–±—É–≤–∞—Ç–∏', 'Try it'],
            "msg_box": [ ['–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è', '–í–∏–±–∞—á—Ç–µ, –∞–ª–µ —Ä—ñ–≤–µ–Ω—å —â–µ –≤ —Å—Ç–∞–¥—ñ—ó —Ä–æ–∑—Ä–æ–±–∫–∏üòÖ'], ['Message', 'Sorry, but the level is still under developmentüòÖ']],
            "best_try_level": ['–ù–∞–π–∫—Ä–∞—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ', 'The best result: '],
            "number_try_level": ['–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å–ø—Ä–æ–±: ', 'Count of attempts: '],
            "start_level_button": ['–ü–æ—á–∞—Ç–∏', 'Start'],
            "textForLevels": ['–†—ñ–≤–µ–Ω—å ', 'Level '],
            "button_help": ["–î–æ–ø–æ–º—ñ–∂–Ω–∏–π —Ç–µ–∫—Å—Ç!!!", "Help text!!!"],
            "button_help_select_level": ["–î–æ–ø–æ–º—ñ–∂–Ω–∏–π —Ç–µ–∫—Å—Ç 2!!!", "Help text 2!!!"],
            "button_help_ForUserLevels": ["–î–æ–ø–æ–º—ñ–∂–Ω–∏–π —Ç–µ–∫—Å—Ç 3!!!", "Help text 3!!!"]
        }
        # –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–∏, —â–æ –∑–∞–ª–µ–∂–Ω—ñ –≤—ñ–¥ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –¥–æ–¥–∞—Ç–∫—É
        self.window = None
        self.title_window = None
        self.level_checking = None
        self.select_Level = None
        self.button_help = None
        self.settings_frame = None
        self.button_settings = None

        # –û–≥–æ–ª–æ—à–µ–Ω–Ω—è –∑–≤'—è–∑–∫—ñ–≤ –∑ –º–æ–¥—É–ª—è–º–∏ –∑–∞—Å—Ç–æ—Å—É–Ω–∫—É
        self.levelCounting = LelelCounting.CreateLevel()
        self.MainWindowLink = None
        self.settingsModule = None
        self.Music = Music.Music()

    # –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –∑–≤'—è–∑–∫—É –∑ –º–æ–¥—É–ª–µ–º –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
    def setMainWindowLink(self, MainWindowLink):
        self.check_for_updates()
        self.MainWindowLink = MainWindowLink
        self.settingsModule = SettingsModule.SettingsModule(self.MainWindowLink, self.levelCounting, self.Music)
        # self.settingsModule = SettingsModule.SettingsModule(self.MainWindowLink, self.levelCounting)
        self.settingsModule.uploadSettings()
        self.addUserVisits()

    # –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–º—ñ–Ω–∏ –º–æ–≤–∏ –¥–æ–¥–∞—Ç–∫—É
    def setLanguage(self, Language):
        self.widgetsLanguage = Language
        # print(f"class MainWindow(): def setLanguage(self, Language): {Language}")
        self.update_ui()

    # –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–º—ñ–Ω–∏ –º–æ–≤–∏ –¥–æ–¥–∞—Ç–∫—É
    def setColor(self, color):
        self.widgetsColor = color
        # print(f"class MainWindow(): def setColor(self, color): {color}")
        self.update_ui()

    # –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–∑—É–∞–ª—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ –≤—ñ–∫–Ω–∞
    def update_ui(self):
        frame_style = f"""
                        QFrame {{
                                background-color: {self.widgetsColor[0]}; /* –§–æ–Ω –∫–∞—Ä—Ç–∫–∏ #9EFFA5; */
                                border-radius: 10px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω—ñ –∫—É—Ç–∏ */
                            }}
                        """
        button_style = f"""
                        QPushButton {{
                            background-color: {self.widgetsColor[0]}; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ */
                            color: #eb8934; /* –ö–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É */
                            border-radius: 30px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—è –∫—É—Ç—ñ–≤ */
                        }}
                        QPushButton:hover {{
                            background-color: #5dade2; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ */
                        }}
                        QPushButton:pressed {{
                            background-color: #1f618d; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ */
                        }}
                    """
        if self.title_window:
            self.title_window.setText(self.widgetsText["title_window"][self.widgetsLanguage])
            self.title_window.setStyleSheet(f"""
                            QLabel {{
                                background-color: {self.widgetsColor[0]}; /* –ö–æ–ª—ñ—Ä —Ñ–æ–Ω—É */
                                color: black; /* –ö–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É */
                                border-radius: 10px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—è –∫—É—Ç—ñ–≤ */
                            }}
                        """)
        self.fill_frame_level_checking()
        self.settings_frame.setStyleSheet(frame_style)
        self.button_settings.setStyleSheet(button_style)
        self.button_help.setStyleSheet(button_style)
        self.select_Level.setStyleSheet(frame_style)
        self.window.set_color(self.widgetsColor)
        self.window.set_language(self.widgetsLanguage)

    # –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
    def mainWindow(self, Main):
        # –ì–æ–ª–æ–≤–Ω–µ –≤—ñ–∫–Ω–æ –∑–∞—Å—Ç–æ—Å—É–Ω–∫—É
        # self.window = RebuildsComponents.MainWindow(self.Music)
        self.window = RebuildsComponents.MainWindow(self.Music)

        # ------------------------------------------------------------------------------------------------------------------–§—Ä–µ–π–º –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω—å

        self.settings_frame = QFrame(self.window)
        self.settings_frame.setGeometry(0, 0, 438, 863)
        self.settings_frame.hide()
        self.settings_frame.setStyleSheet(f"""
                        QFrame {{
                            background-color: {self.widgetsColor[0]}; /* –§–æ–Ω –∫–∞—Ä—Ç–∫–∏ #9EFFA5; */
                            border-radius: 10px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω—ñ –∫—É—Ç–∏ */
                        }}
                    """)

        # ------------------------------------------------------------------------------------------------------------------–§—Ä–µ–π–º –ü—Ä–æ–∑–æ—Ä–∏–π

        unvisible_frame = RebuildsComponents.ClickableFrame(self.window)
        unvisible_frame.setGeometry(0, 0, 1315, 917)
        unvisible_frame.hide()
        unvisible_frame.setStyleSheet("""
                            QFrame {
                                background-color: #8A8A8A; /* –§–æ–Ω –∫–∞—Ä—Ç–∫–∏ #9EFFA5; */
                                border-radius: 10px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω—ñ –∫—É—Ç–∏ */
                            }
                        """)
        opacity_effect = QGraphicsOpacityEffect()
        opacity_effect.setOpacity(0.4)

        unvisible_frame.setGraphicsEffect(opacity_effect)

        # ------------------------------------------------------------------------------------------------------------------–ö–Ω–æ–ø–∫–∞ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω—å

        self.button_settings = QPushButton(self.window)
        self.button_settings.setGeometry(48, 23, 60, 60)
        # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —ñ–∫–æ–Ω–∫—É
        icon = QIcon("FingerImages/settings.png")
        self.button_settings.setIcon(icon)
        self.button_settings.setIconSize(QSize(50, 50))  # –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ —Ä–æ–∑–º—ñ—Ä —ñ–∫–æ–Ω–∫–∏ (50x50 –ø—ñ–∫—Å–µ–ª—ñ–≤)

        font = QFont()
        font.setBold(True)
        font.setPointSize(14)
        self.button_settings.setFont(font)

        self.button_settings.setStyleSheet(f"""
                QPushButton {{
                    background-color: {self.widgetsColor[0]}; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ */
                    color: #eb8934; /* –ö–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É */
                    border-radius: 30px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—è –∫—É—Ç—ñ–≤ */
                }}
                QPushButton:hover {{
                    background-color: #5dade2; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ */
                }}
                QPushButton:pressed {{
                    background-color: #1f618d; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ */
                }}
            """)

        # –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Å–∏–≥–Ω–∞–ª—É "clicked" –¥–æ –æ–±—Ä–æ–±–Ω–∏–∫–∞
        self.button_settings.clicked.connect(lambda: self.settingsModule.show_settings(self.settings_frame, unvisible_frame, self.window))

        # ------------------------------------------------------------------------------------------------------------------–ù–∞–∑–≤–∞ –ø—Ä–æ–≥—Ä–∞–º–∏

        self.title_window = QLabel(self.window)
        self.title_window.setGeometry(468, 23, 380, 55)
        self.title_window.setText(self.widgetsText["title_window"][self.widgetsLanguage])

        font = QFont()
        font.setBold(True)
        font.setPointSize(16)
        self.title_window.setFont(font)

        self.title_window.setFrameShape(QLabel.StyledPanel)
        self.title_window.setFrameShadow(QLabel.Plain)
        self.title_window.setAlignment(Qt.AlignCenter)
        self.title_window.setStyleSheet(f"""
                QLabel {{
                    background-color: {self.widgetsColor[0]}; /* –ö–æ–ª—ñ—Ä —Ñ–æ–Ω—É */
                    color: black; /* –ö–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É */
                    border-radius: 10px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—è –∫—É—Ç—ñ–≤ */
                }}
            """)

        # ------------------------------------------------------------------------------------------------------------------–ö–Ω–æ–ø–∫–∞ –î–æ–≤—ñ–¥–∫–∏

        self.button_help = QPushButton(self.window)
        self.button_help.setGeometry(1206, 18, 60, 60)
        self.button_help.setText("?")

        font = QFont()
        font.setBold(True)
        font.setPointSize(18)
        self.button_help.setFont(font)

        self.button_help.setStyleSheet(f"""
                QPushButton {{
                    background-color: {self.widgetsColor[0]}; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ */
                    color: #eb8934; /* –ö–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É */
                    border-radius: 30px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—è –∫—É—Ç—ñ–≤ */
                }}
                QPushButton:hover {{
                    background-color: #5dade2; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ */
                }}
                QPushButton:pressed {{
                    background-color: #1f618d; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ */
                }}
            """)

        # –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Å–∏–≥–Ω–∞–ª—É "clicked" –¥–æ –æ–±—Ä–æ–±–Ω–∏–∫–∞
        self.button_help.clicked.connect(partial(self.showHelpWindow, self.widgetsText["button_help"][self.widgetsLanguage], "FingerImages/–ó–∞–ø–∏—Å—É–≤–∞–Ω–Ω—è –∑ –µ–∫—Ä–∞–Ω–∞ 2025-04-16 112136.gif"))

        # ------------------------------------------------------------------------------------------------------------------–§—Ä–µ–π–º –≤–∏–±—ñ—Ä–∫–∏ —Ä—ñ–≤–Ω—è

        self.select_Level = QFrame(self.window)
        self.select_Level.setGeometry(0, 0, 1315, 917)
        self.select_Level.hide()
        self.select_Level.setStyleSheet(f"""
                    QFrame {{
                        background-color: {self.widgetsColor[0]}; /* –§–æ–Ω –∫–∞—Ä—Ç–∫–∏ */
                        border-radius: 10px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω—ñ –∫—É—Ç–∏ */
                    }}
                """)

        # ------------------------------------------------------------------------------------------------------------------–§—Ä–µ–π–º –∑ –∫–∞—Ä—Ç–∫–∞–º–∏ –¥–ª—è –≤–∏–±–æ—Ä—É —Ä–µ–∂–∏–º—É —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è

        self.level_checking = QScrollArea(self.window)
        self.level_checking.setGeometry(48, 90, 1216, 800)

        self.level_checking.setHorizontalScrollBarPolicy(Qt.ScrollBarAsNeeded)  # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞ –ø—Ä–æ–∫—Ä—É—Ç–∫–∞
        self.level_checking.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOff)  # –í—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ—ó –ø—Ä–æ–∫—Ä—É—Ç–∫–∏

        self.fill_frame_level_checking()

        self.level_checking.setStyleSheet("""
        QScrollArea {
            border: none; /* –ó–∞–±—Ä–∞—Ç–∏ —Ä–∞–º–∫—É, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–µ —á–∏—Å—Ç–µ —Ç–ª–æ */
            background-color: #DAFFDF; /* –ö–æ–ª—ñ—Ä —Ñ–æ–Ω—É */
        }
        """)

        # ------------------------------------------------------------------------------------------------------------------–ö—ñ–Ω–µ—Ü—å –§—Ä–µ–π–º –∑ –∫–∞—Ä—Ç–∫–∞–º–∏ –¥–ª—è –≤–∏–±–æ—Ä—É —Ä–µ–∂–∏–º—É —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è

        # –ü—ñ–¥–Ω—è—Ç—Ç—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –Ω–∞ —ñ–Ω—à—ñ –ø–æ–≤–µ—Ä—Ö–∏
        self.select_Level.raise_()
        self.title_window.raise_()
        self.button_help.raise_()
        unvisible_frame.raise_()
        self.settings_frame.raise_()

        # ------------------------------------------------------------------------------------------------------------------–ó–∞–∫—Ä–∏—Ç—Ç—è –ø—Ä–æ–≥—Ä–∞–º–∏
        self.window.show()
        self.setMainWindowLink(Main)

    # –§—É–Ω–∫—Ü—ñ—è-–æ–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó –≤—ñ–∫–Ω–∞ –¥–æ–≤—ñ–¥–∫–∏
    def showHelpWindow(self, helpText, helpGif):
        print("showHelpWindow")
        helpWindow = RebuildsComponents.ModalWindow(800, 200, 700, 600)
        helpWindow.setWindowTitle("Help window")
        helpWindow.setStyleSheet(f"""
                               QDialog {{
                                   background-color: {self.widgetsColor[1]}; /* –ö–æ–ª—ñ—Ä –≤—ñ–∫–Ω–∞ */
                               }}
                           """)

        label_helpText = QLabel(helpWindow)
        label_helpText.setGeometry(20, 50, 200, 500)
        label_helpText.setText(helpText)

        font = QFont()
        font.setBold(True)
        font.setPointSize(14)
        label_helpText.setFont(font)
        label_helpText.setWordWrap(True)

        label_helpText.setStyleSheet(f"""
                        QLabel {{
                            background-color: {self.widgetsColor[0]}; /* –ö–æ–ª—ñ—Ä —Ñ–æ–Ω—É */
                            color: black; /* –ö–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É */
                            border-radius: 10px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—è –∫—É—Ç—ñ–≤ */
                        }}
                    """)

        labelGif = QLabel(helpWindow)
        labelGif.setGeometry(250, 50, 400, 500)

        movie = QMovie(helpGif)
        labelGif.setMovie(movie)
        movie.start()

        labelGif.show()

        helpWindow.exec_()  # –ó–∞–ø—É—Å–∫–∞—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ (–±–ª–æ–∫—É—î –æ—Å–Ω–æ–≤–Ω–µ)

    # –§—É–Ω–∫—Ü—ñ—è, —â–æ –∑–∞–ø–æ–≤–Ω—é—î —Ñ—Ä–µ–π–º level_checking –∫–∞—Ä—Ç–∫–∞–º–∏
    def fill_frame_level_checking(self):
        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤–º—ñ—Å—Ç—É
        content_widget = QWidget()
        layout = QHBoxLayout(content_widget)  # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–µ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è
        layout.setContentsMargins(10, 10, 10, 10)  # –í—ñ–¥—Å—Ç—É–ø–∏ –º—ñ–∂ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏
        layout.setSpacing(30)  # –ü—Ä–æ–º—ñ–∂–∫–∏ –º—ñ–∂ –∫–∞—Ä—Ç–∫–∞–º–∏

        titles_cards = {
            0: ["–ñ–µ—Å—Ç–∏ –æ–¥–Ω—ñ—î—é —Ä—É–∫–æ—é", "–ñ–µ—Å—Ç–∏ –¥–≤—É–º–∞ —Ä—É–∫–∞–º–∏", "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–∏–π —Ä—ñ–≤–µ–Ω—å", "–í —Ä–æ–∑—Ä–æ–±—Ü—ñ"],
            1: ["Gestures with one hand", "Gestures with two hand", "User level", "In development"]
        }
        text_cards = {
            0: ["üí° –ú–µ—Ç–∞: –û–∑–Ω–∞–π–æ–º–ª–µ–Ω–Ω—è –∑ –±–∞–∑–æ–≤–∏–º–∏ –∂–µ—Å—Ç–∞–º–∏, —Ç–∞–∫–∏–º–∏ —è–∫ –≤–∫–∞–∑—É–≤–∞–Ω–Ω—è, –º–∞—Ö–∞–Ω–Ω—è, –ø–æ–∫–∞–∑—É–≤–∞–Ω–Ω—è –∑–Ω–∞–∫—ñ–≤.",

                "üí° –ú–µ—Ç–∞: –í–∏–≤—á–µ–Ω–Ω—è –∂–µ—Å—Ç—ñ–≤ –¥–ª—è –≤–∑–∞—î–º–æ–¥—ñ—ó –∑ –≤–µ–ª–∏–∫–∏–º–∏ –æ–±'—î–∫—Ç–∞–º–∏, –ø–µ—Ä–µ–¥–∞—á—ñ —Å–∫–ª–∞–¥–Ω–∏—Ö –∫–æ–º–∞–Ω–¥ –∞–±–æ –≤–∏—Ä–∞–∂–µ–Ω–Ω—è –µ–º–æ—Ü—ñ–π.",

                "\nüí° –ú–µ—Ç–∞: –î–∞—Ç–∏ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ –∂–µ—Å—Ç–∏ —á–∏ –º—ñ–º—ñ–∫—É –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏—Ö —Å—Ü–µ–Ω–∞—Ä—ñ—ó–≤.",

                ""],
            1: ["üí° Meta: Familiarize yourself with basic gestures such as pointing, waving, and signing.",

                "üí° Meta: Learn gestures to interact with large objects, communicate complex commands, or express emotions.",

                "\nüí° Meta: Enable users to create unique gestures or facial expressions for personalized scenarios.",

                ""]
        }
        images_cards = ["FingerImages/1.jpg", "FingerImages/2.jpg", "FingerImages/3.jpg",
                        "FingerImages/InDevelopment.png"]

        # –î–æ–¥–∞–≤–∞–Ω–Ω—è "–∫–∞—Ä—Ç–æ–∫" —É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        for i in range(4):  # 4 –∫–∞—Ä—Ç–æ–∫
            card = self.create_card(titles_cards[self.widgetsLanguage][i], text_cards[self.widgetsLanguage][i],
                                    images_cards[i])

            # --------------------------------------------------------------------------------------------------------------–ö–Ω–æ–ø–∫–∞ –∫–∞—Ä—Ç–∫–∏ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É –≤ —Ä–µ–∂–∏–º —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è
            button_start = QPushButton(card)
            button_start.setGeometry(30, 393 + 100, 320, 55)
            button_start.setText(self.widgetsText["button_start"][self.widgetsLanguage])
            button_start.setStyleSheet(f"""
                                    QPushButton {{
                                        background-color: {self.widgetsColor[1]}; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ */
                                        color: black; /* –ö–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É */
                                        border-radius: 10px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—è –∫—É—Ç—ñ–≤ */
                                        font-size: 17px;
                                        font-weight: bold;
                                    }}
                                    QPushButton:hover {{
                                        background-color: #5dade2; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ */
                                    }}
                                    QPushButton:pressed {{
                                        background-color: #1f618d; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ */
                                    }}
                                """)
            # –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Å–∏–≥–Ω–∞–ª—É "clicked" –¥–æ –æ–±—Ä–æ–±–Ω–∏–∫–∞
            if not card.objectName() == "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–∏–π —Ä—ñ–≤–µ–Ω—å" and not card.objectName() == "User level":
                button_start.clicked.connect(
                    partial(self.visible_select_level_click,card))
            else:
                button_start.clicked.connect(
                    partial(self.visible_select_levelForUserLevels_click, card))

            # --------------------------------------------------------------------------------------------------------------–ö—ñ–Ω–µ—Ü—å –∫–∞—Ä—Ç–∫–∏
            layout.addWidget(card)  # –î–æ–¥–∞—î–º–æ –∫–∞—Ä—Ç–∫—É —É –º–∞–∫–µ—Ç

        # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —É QScrollArea
        content_widget.setLayout(layout)
        self.level_checking.setWidget(content_widget)
        self.level_checking.setWidgetResizable(True)  # –ê–¥–∞–ø—Ç–∞—Ü—ñ—è —Ä–æ–∑–º—ñ—Ä—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–æ QScrollArea

    # –§—É–Ω–∫—Ü—ñ—è-–æ–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ —Ñ—Ä–µ–π–º—É –≤–∏–±—ñ—Ä–∫–∏ —Ä—ñ–≤–Ω—è
    def visible_select_level_click(self, card):
        for widget in self.select_Level.findChildren(QWidget):
            widget.deleteLater()
        if card.objectName() == "–í —Ä–æ–∑—Ä–æ–±—Ü—ñ" or card.objectName() == "In development":
            # –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            msg_box = QMessageBox()
            msg_box.setIcon(QMessageBox.Information)
            msg_box.setWindowTitle(self.widgetsText["msg_box"][self.widgetsLanguage][0])
            msg_box.setText(self.widgetsText["msg_box"][self.widgetsLanguage][1])
            # –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            msg_box.exec_()
            return False

        self.select_Level.show()
        self.title_window.setStyleSheet(f"""
                    QLabel {{
                        background-color: {self.widgetsColor[1]}; /* –ö–æ–ª—ñ—Ä —Ñ–æ–Ω—É */
                        color: black; /* –ö–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É */
                        border-radius: 10px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—è –∫—É—Ç—ñ–≤ */
                    }}
                """)
        self.button_help.setStyleSheet(f"""
                        QPushButton {{
                            background-color: {self.widgetsColor[1]}; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ */
                            color: #eb8934; /* –ö–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É */
                            border-radius: 30px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—è –∫—É—Ç—ñ–≤ */
                        }}
                        QPushButton:hover {{
                            background-color: #5dade2; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ */
                        }}
                        QPushButton:pressed {{
                            background-color: #1f618d; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ */
                        }}
                    """)
        try:
            self.button_help.clicked.disconnect()
        except Exception:
            pass  # –Ø–∫—â–æ –Ω–µ–º–∞—î –ø—ñ–¥–∫–ª—é—á–µ–Ω–∏—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤, —ñ–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫—É

        # –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Å–∏–≥–Ω–∞–ª—É "clicked" –¥–æ –æ–±—Ä–æ–±–Ω–∏–∫–∞
        self.button_help.clicked.connect(
            partial(self.showHelpWindow, self.widgetsText["button_help_select_level"][self.widgetsLanguage],
                    "FingerImages/–ó–∞–ø–∏—Å—É–≤–∞–Ω–Ω—è –∑ –µ–∫—Ä–∞–Ω–∞ 2025-04-16 112136.gif"))

        self.duplicate_card_to_frame(card)

        # ------------------------------------------------------------------------------------------------------------------–ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –Ω–∞ –≥–æ–ª–æ–≤–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É

        button_return = QPushButton(self.select_Level)
        button_return.setGeometry(48, 23, 60, 60)
        # button_return.setText("<-")

        # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤ QPixmap
        pixmap = QPixmap("FingerImages/right-arrow.png")  # –í–∫–∞–∂—ñ—Ç—å —à–ª—è—Ö –¥–æ –≤–∞—à–æ–≥–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è

        # –û–±–µ—Ä—Ç–∞—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
        transform = QTransform().rotate(180)
        rotated_pixmap = pixmap.transformed(transform)

        # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —ñ–∫–æ–Ω–∫—É
        icon = QIcon(rotated_pixmap)
        button_return.setIcon(icon)
        button_return.setIconSize(QSize(50, 50))  # –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ —Ä–æ–∑–º—ñ—Ä —ñ–∫–æ–Ω–∫–∏ (50x50 –ø—ñ–∫—Å–µ–ª—ñ–≤)
        button_return.show()

        font = QFont()
        font.setBold(True)
        font.setPointSize(18)
        button_return.setFont(font)

        button_return.setStyleSheet(f"""
                            QPushButton {{
                                background-color: {self.widgetsColor[1]}; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ */
                                color: #eb8934; /* –ö–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É */
                                border-radius: 30px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—è –∫—É—Ç—ñ–≤ */
                            }}
                            QPushButton:hover {{
                                background-color: #5dade2; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ */
                            }}
                            QPushButton:pressed {{
                                background-color: #1f618d; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ */
                            }}
                        """)
        button_return.clicked.connect(
            partial(self.hide_select_level_click))

        # ------------------------------------------------------------------------------------------------------------------–§—Ä–µ–π–º –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä—ñ–≤–Ω—ñ–≤

        levels = QFrame(self.select_Level)
        levels.setGeometry(490, 100, 770, 750)
        levels.show()
        levels.setStyleSheet(f"""
                        QFrame {{
                            background-color: {self.widgetsColor[1]}; /* –§–æ–Ω –∫–∞—Ä—Ç–∫–∏ */
                            border-radius: 10px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω—ñ –∫—É—Ç–∏ */
                        }}
                    """)

        # ------------------------------------------------------------------------------------------------------------------–§—Ä–µ–π–º –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É —Ä—ñ–≤–Ω—è

        level_status = QFrame(levels)
        level_status.setGeometry(45, 480, 680, 230)
        level_status.setObjectName("level_status")
        level_status.setStyleSheet("""
                            QFrame {
                                background-color: none; /* –§–æ–Ω –∫–∞—Ä—Ç–∫–∏ */
                                border-radius: 10px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω—ñ –∫—É—Ç–∏ */
                                border: 5px solid blue;
                            }
                        """)
        level_status.hide()

        # ------------------------------------------------------------------------------------------------------------------–ö–Ω–æ–ø–∫–∏ –≤–∏–±—ñ—Ä–∫–∏ —Ä—ñ–≤–Ω—è

        self.show_levels_buttons(levels, 40, 1, level_status)
        self.show_levels_buttons(levels, 260, 4, level_status)

        # ------------------------------------------------------------------------------------------------------------------–í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–∞–π–∫—Ä–∞—â–æ–≥–æ –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è —Ä—ñ–≤–Ω—è

        best_try_level = QLabel(level_status)
        best_try_level.setGeometry(50, 50, 250, 50)
        best_try_level.setText(self.widgetsText["best_try_level"][self.widgetsLanguage])
        best_try_level.setStyleSheet("""
                    QLabel {
                        background-color: none; /* –ö–æ–ª—ñ—Ä —Ñ–æ–Ω—É */
                        color: black; /* –ö–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É */
                        border: none;
                        font-size: 23px;
                    }
                """)

        best_try_level_num = QLabel(level_status)
        best_try_level_num.setGeometry(300, 50, 50, 50)
        best_try_level_num.setText("0 üñêÔ∏è")
        best_try_level_num.setStyleSheet("""
                        QLabel {
                            background-color: none; /* –ö–æ–ª—ñ—Ä —Ñ–æ–Ω—É */
                            color: black; /* –ö–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É */
                            border: none;
                            font-size: 23px;
                            font-weight: bold;
                        }
                    """)

        # ------------------------------------------------------------------------------------------------------------------–í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω—å —Ä—ñ–≤–Ω—è

        number_try_level = QLabel(level_status)
        number_try_level.setGeometry(50, 130, 250, 50)
        number_try_level.setText(self.widgetsText["number_try_level"][self.widgetsLanguage])
        number_try_level.setStyleSheet("""
                        QLabel {
                            background-color: none; /* –ö–æ–ª—ñ—Ä —Ñ–æ–Ω—É */
                            color: black; /* –ö–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É */
                            border: none;
                            font-size: 23px;
                        }
                    """)

        number_try_level_num = QLabel(level_status)
        number_try_level_num.setGeometry(300, 130, 50, 50)
        number_try_level_num.setText("0")
        number_try_level_num.setStyleSheet("""
                            QLabel {
                                background-color: none; /* –ö–æ–ª—ñ—Ä —Ñ–æ–Ω—É */
                                color: black; /* –ö–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É */
                                border: none;
                                font-size: 23px;
                                font-weight: bold;
                            }
                        """)

        # ------------------------------------------------------------------------------------------------------------------–§—Ä–µ–π–º –¥–ª—è —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è

        level_cv_frame = QFrame(self.select_Level)
        level_cv_frame.setGeometry(0, 0, 1315, 917)
        level_cv_frame.hide()
        level_cv_frame.setStyleSheet(f"""
                        QFrame {{
                            background-color: {self.widgetsColor[0]}; /* –§–æ–Ω –∫–∞—Ä—Ç–∫–∏ */
                            border-radius: 10px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω—ñ –∫—É—Ç–∏ */
                        }}
                    """)

        # ------------------------------------------------------------------------------------------------------------------–ö–Ω–æ–ø–∫–∞ –¥–ª—è —Ç–æ–≥–æ, —â–æ–± —Ä–æ–∑–ø–æ—á–∞—Ç–∏ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è

        start_level_button = QPushButton(level_status)
        start_level_button.setGeometry(430, 80, 170, 80)
        start_level_button.setText(self.widgetsText["start_level_button"][self.widgetsLanguage])
        start_level_button.setObjectName("start_level_button")
        start_level_button.setStyleSheet(f"""
                    QPushButton {{
                        background-color: {self.widgetsColor[0]}; /* –§–æ–Ω –∫–Ω–æ–ø–∫–∏ */
                        border-radius: 10px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω—ñ –∫—É—Ç–∏ */
                        border: 3px solid black;
                        border-color: {self.widgetsColor[0]};
                        font-size: 25px;
                        font-weight: bold;
                    }}
                    QPushButton:hover {{
                        border-color: #5dade2; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ */
                    }}
                    QPushButton:pressed {{
                        border-color: #1f618d; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ */
                    }}
                """)

        self.levelCounting.setDefaultParameters()
        start_level_button.clicked.connect(lambda: self.levelCounting.create_new_level_click(
            self.current_game_level, card.objectName(), level_cv_frame))

        # ------------------------------------------------------------------------------------------------------------------

    # –§—É–Ω–∫—Ü—ñ—è-–æ–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–∏—Ö–æ–≤–∞–Ω–Ω—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ —Ñ—Ä–µ–π–º—É –≤–∏–±—ñ—Ä–∫–∏ —Ä—ñ–≤–Ω—è
    def hide_select_level_click(self):
        print("–ö–Ω–æ–ø–∫—É –Ω–∞—Ç–∏—Å–Ω—É—Ç–æ!")
        self.select_Level.hide()
        self.title_window.setStyleSheet(f"""
                    QLabel {{
                        background-color: {self.widgetsColor[0]}; /* –ö–æ–ª—ñ—Ä —Ñ–æ–Ω—É */
                        color: black; /* –ö–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É */
                        border-radius: 10px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—è –∫—É—Ç—ñ–≤ */
                    }}
                """)
        self.button_help.setStyleSheet(f"""
                        QPushButton {{
                            background-color: {self.widgetsColor[0]}; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ */
                            color: #eb8934; /* –ö–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É */
                            border-radius: 30px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—è –∫—É—Ç—ñ–≤ */
                        }}
                        QPushButton:hover {{
                            background-color: #5dade2; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ */
                        }}
                        QPushButton:pressed {{
                            background-color: #1f618d; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ */
                        }}
                    """)
        try:
            self.button_help.clicked.disconnect()
        except Exception:
            pass  # –Ø–∫—â–æ –Ω–µ–º–∞—î –ø—ñ–¥–∫–ª—é—á–µ–Ω–∏—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤, —ñ–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫—É

        # –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Å–∏–≥–Ω–∞–ª—É "clicked" –¥–æ –æ–±—Ä–æ–±–Ω–∏–∫–∞
        self.button_help.clicked.connect(
            partial(self.showHelpWindow, self.widgetsText["button_help"][self.widgetsLanguage],
                    "FingerImages/–ó–∞–ø–∏—Å—É–≤–∞–Ω–Ω—è –∑ –µ–∫—Ä–∞–Ω–∞ 2025-04-16 112136.gif"))

    # –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞—Ä—Ç–∫–∏ –≤–∏–¥—É –≤–ø—Ä–∞–≤
    def create_card(self, title_text, description_text, image_path, parent=None):
        card = QFrame(parent)
        card.setObjectName(title_text)
        card.setFixedSize(378, 750)  # –§—ñ–∫—Å–æ–≤–∞–Ω–∏–π —Ä–æ–∑–º—ñ—Ä –∫–∞—Ä—Ç–∫–∏
        card.setStyleSheet(f"""
                    QFrame {{
                        background-color: {self.widgetsColor[0]}; /* –§–æ–Ω –∫–∞—Ä—Ç–∫–∏ */
                        border-radius: 10px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω—ñ –∫—É—Ç–∏ */
                    }}
                """)

        # –ù–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –∫–∞—Ä—Ç–∫–∏
        # ------------------------------------------------------------------------------------------------------------------–ù–∞–∑–≤–∞ –∫–∞—Ä—Ç–∫–∏
        title = QLabel(title_text, card)
        title.setGeometry(3, 30 + 100, 378, 50)
        title.setAlignment(Qt.AlignCenter)  # –¶–µ–Ω—Ç—Ä—É–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É
        title.setObjectName("title_label")  # –ó–∞–¥–∞–Ω–Ω—è —ñ–º–µ–Ω—ñ
        title.setStyleSheet("font-size: 23px; font-weight: bold;")

        # ------------------------------------------------------------------------------------------------------------------–û–ø–∏—Å –∫–∞—Ä—Ç–∫–∏
        text_card = QLabel(description_text, card)
        text_card.setAlignment(Qt.AlignLeft | Qt.AlignBottom)
        text_card.setWordWrap(True)
        text_card.setGeometry(30, 80 + 100, 320, 300)
        text_card.setObjectName("description_label")  # –ó–∞–¥–∞–Ω–Ω—è —ñ–º–µ–Ω—ñ
        text_card.setStyleSheet(f"font-size: 17px; font-weight: bold; background-color: {self.widgetsColor[1]};"
                                " /* –ö–æ–ª—ñ—Ä —Ñ–æ–Ω—É */ padding: 5px; /* –í—ñ–¥—Å—Ç—É–ø–∏ –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ —Ä–∞–º–∫–∏ */")

        # ------------------------------------------------------------------------------------------------------------------–§–æ—Ç–æ –∫–∞—Ä—Ç–∫–∏
        image_label = QLabel(card)
        if not card.objectName() == "–í —Ä–æ–∑—Ä–æ–±—Ü—ñ" or not card.objectName() == "In development":
            image_label.setGeometry(70, 90 + 100, 250, 170)
        else:
            image_label.setGeometry(70, 90 + 150, 250, 170)
        pixmap = QPixmap(image_path)
        image_label.setPixmap(pixmap)
        image_label.setScaledContents(True)
        image_label.setObjectName("image_label")  # –ó–∞–¥–∞–Ω–Ω—è —ñ–º–µ–Ω—ñ

        return card

    # –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥—É–±–ª—ñ–∫–∞—Ç—É –∫–∞—Ä—Ç–∫–∏ –≤–∏–¥—É –≤–ø—Ä–∞–≤
    def duplicate_card_to_frame(self, card):
        # –û—Ç—Ä–∏–º—É—î–º–æ —Ç–µ–∫—Å—Ç —ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–æ—ó –∫–∞—Ä—Ç–∫–∏ –∑–∞ –Ω–∞–∑–≤–æ—é –æ–±'—î–∫—Ç–∞
        title_label = card.findChild(QLabel, "title_label")
        description_label = card.findChild(QLabel, "description_label")
        image_label = card.findChild(QLabel, "image_label")

        # –ó—á–∏—Ç—É—î–º–æ –¥–∞–Ω—ñ
        title_text = title_label.text() if title_label else ""
        description_text = description_label.text() if description_label else ""
        pixmap = image_label.pixmap() if image_label else None

        # –°—Ç–≤–æ—Ä—é—î–º–æ –¥—É–±–ª—å–æ–≤–∞–Ω—É –∫–∞—Ä—Ç–∫—É
        duplicated_card = self.create_card(title_text, description_text, pixmap, self.select_Level)

        # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø–æ–∑–∏—Ü—ñ—é –¥—É–±–ª—ñ–∫–∞—Ç–∞
        duplicated_card.setGeometry(45, 100, 378, 750)  # –ó–∞–¥–∞–π—Ç–µ –ø–æ–∑–∏—Ü—ñ—é –≤—Ä—É—á–Ω—É –∞–±–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ
        duplicated_card.show()

    # –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä—ñ–≤–Ω—ñ–≤ 1-6 —É —Ñ—Ä–µ–π–º—ñ –≤–∏–±—ñ—Ä–∫–∏ —Ä—ñ–≤–Ω—è (–¥–∏–≤. visible_select_level_click() )
    def show_levels_buttons(self, levels, stepY, num, level_status):
        # ------------------------------------------------------------------------------------------------------------------–ö–Ω–æ–ø–∫–∏ –≤–∏–±—ñ—Ä–∫–∏ —Ä—ñ–≤–Ω—è
        stepX = 0
        points = 3
        timeForLevel = 90
        for i in range(3):
            button_level = QPushButton(levels)
            button_level.setGeometry(45 + stepX, stepY, 200, 180)
            button_level.setObjectName("button_level_" + str(num))  # –ó–∞–¥–∞–Ω–Ω—è —ñ–º–µ–Ω—ñ
            button_level.setStyleSheet(f"""
                QPushButton {{
                    background-color: {self.widgetsColor[0]}; /* –§–æ–Ω –∫–Ω–æ–ø–∫–∏ */
                    border-radius: 10px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω—ñ –∫—É—Ç–∏ */
                    border: 3px solid black;
                    border-color: {self.widgetsColor[0]};
                    font-size: 40px;
                    font-weight: bold;
                    padding-top: 20px;
                }}
                QPushButton:hover {{
                    border-color: #5dade2; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ */
                }}
                QPushButton:pressed {{
                    border-color: #1f618d; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ */
                }}
            """)

            if stepY == 40:
                button_level.setText(str(points) + "üñêÔ∏è")
            else:
                button_level.setText(str(points) + "üñêÔ∏è" + "\n" + str(timeForLevel) + "üïò")

            stepX += 240  # –ó–±—ñ–ª—å—à—É—î–º–æ –∫—Ä–æ–∫ –ø–æ –æ—Å—ñ X
            points += 2
            timeForLevel -= 25
            button_level.show()
            button_level.setCheckable(True)
            button_level.setChecked(False)

            # –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Å–∏–≥–Ω–∞–ª—É "clicked" –¥–æ –æ–±—Ä–æ–±–Ω–∏–∫–∞
            button_level.clicked.connect(partial(self.select_level_click, button_level, level_status))

            textForLevels = QLabel(button_level)
            textForLevels.setGeometry(68, 3, 200, 50)
            textForLevels.setText(self.widgetsText["textForLevels"][self.widgetsLanguage] + str(num))
            textForLevels.setStyleSheet("background-color: none; font-size: 15px; font-weight: bold;")
            textForLevels.show()
            num += 1

    # –§—É–Ω–∫—Ü—ñ—è-–æ–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ–Ω—Ñ–æ –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è —Ä—ñ–≤–Ω—è (–¥–∏–≤. show_levels_buttons() )
    def select_level_click(self, current_button_level, level_status):
        # –ë–ª–æ–∫—É–≤–∞–Ω–Ω—è –≤—Å—ñ—Ö —ñ–Ω—à–∏—Ö –∫–Ω–æ–ø–æ–∫
        parent_frame = current_button_level.parent()  # –û—Ç—Ä–∏–º–∞—Ç–∏ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–∏–π —Ñ—Ä–µ–π–º
        for child in parent_frame.findChildren(QPushButton):
            if child != current_button_level and child.objectName() != "start_level_button":
                child.setEnabled(False)  # –ó–∞–±–ª–æ–∫—É–≤–∞—Ç–∏ —ñ–Ω—à—ñ –∫–Ω–æ–ø–∫–∏

        if current_button_level.isChecked():
            print("select_level_click(): " + current_button_level.objectName())
            current_button_level.setChecked(True)
            current_button_level.setStyleSheet(f"""
                        QPushButton {{
                            background-color: {self.widgetsColor[0]}; /* –§–æ–Ω –∫–Ω–æ–ø–∫–∏ */
                            border-radius: 10px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω—ñ –∫—É—Ç–∏ */
                            border: 3px solid black;
                            border-color: #6085ff;
                            font-size: 40px;
                            font-weight: bold;
                            padding-top: 20px;
                        }}
                        QPushButton:hover {{
                            border-color: lime; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ */
                        }}
                        QPushButton:pressed {{
                            border-color: #1f618d; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ */
                        }}
                    """)
            level_status.show()
            self.current_game_level = current_button_level.objectName()
        else:
            level_status.hide()
            current_button_level.setChecked(False)
            current_button_level.setStyleSheet(f"""
                        QPushButton {{
                            background-color: {self.widgetsColor[0]}; /* –§–æ–Ω –∫–Ω–æ–ø–∫–∏ */
                            border-radius: 10px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω—ñ –∫—É—Ç–∏ */
                            border: 3px solid black;
                            border-color: {self.widgetsColor[0]};
                            font-size: 40px;
                            font-weight: bold;
                            padding-top: 20px;
                        }}
                        QPushButton:hover {{
                            border-color: #5dade2; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ */
                        }}
                        QPushButton:pressed {{
                            border-color: #1f618d; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ */
                        }}
                    """)

            # –†–æ–∑–±–ª–æ–∫—É–≤–∞–Ω–Ω—è —ñ–Ω—à–∏—Ö –∫–Ω–æ–ø–æ–∫, —è–∫—â–æ –ø–æ—Ç–æ—á–Ω–∞ –∫–Ω–æ–ø–∫–∞ –≤—ñ–¥–∫–ª—é—á–∞—î—Ç—å—Å—è
            for child in parent_frame.findChildren(QPushButton):
                child.setEnabled(True)
            self.current_game_level = "Undefined"

    # –§—É–Ω–∫—Ü—ñ—è-–æ–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ —Ñ—Ä–µ–π–º—É "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–∏–π —Ä—ñ–≤–µ–Ω—å"
    def visible_select_levelForUserLevels_click(self, card):
        for widget in self.select_Level.findChildren(QWidget):
            widget.deleteLater()
        self.select_Level.show()

        level_cv_frame = QFrame(self.select_Level)
        level_cv_frame.setGeometry(0, 0, 1315, 917)
        level_cv_frame.hide()
        level_cv_frame.setStyleSheet(f"""
                            QFrame {{
                                background-color: {self.widgetsColor[0]}; /* –§–æ–Ω –∫–∞—Ä—Ç–∫–∏ */
                                border-radius: 10px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω—ñ –∫—É—Ç–∏ */
                            }}
                        """)

        self.title_window.setStyleSheet(f"""
                        QLabel {{
                            background-color: {self.widgetsColor[1]}; /* –ö–æ–ª—ñ—Ä —Ñ–æ–Ω—É */
                            color: black; /* –ö–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É */
                            border-radius: 10px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—è –∫—É—Ç—ñ–≤ */
                        }}
                    """)
        self.button_help.setStyleSheet(f"""
                            QPushButton {{
                                background-color: {self.widgetsColor[1]}; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ */
                                color: #eb8934; /* –ö–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É */
                                border-radius: 30px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—è –∫—É—Ç—ñ–≤ */
                            }}
                            QPushButton:hover {{
                                background-color: #5dade2; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ */
                            }}
                            QPushButton:pressed {{
                                background-color: #1f618d; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ */
                            }}
                        """)

        try:
            self.button_help.clicked.disconnect()
        except Exception:
            pass  # –Ø–∫—â–æ –Ω–µ–º–∞—î –ø—ñ–¥–∫–ª—é—á–µ–Ω–∏—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤, —ñ–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫—É

        # –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Å–∏–≥–Ω–∞–ª—É "clicked" –¥–æ –æ–±—Ä–æ–±–Ω–∏–∫–∞
        self.button_help.clicked.connect(
            partial(self.showHelpWindow, self.widgetsText["button_help_ForUserLevels"][self.widgetsLanguage],
                    "FingerImages/–ó–∞–ø–∏—Å—É–≤–∞–Ω–Ω—è –∑ –µ–∫—Ä–∞–Ω–∞ 2025-04-16 112136.gif"))

        self.duplicate_card_to_frame(card)

        # ------------------------------------------------------------------------------------------------------------------–ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –Ω–∞ –≥–æ–ª–æ–≤–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É

        button_return = QPushButton(self.select_Level)
        button_return.setGeometry(48, 23, 60, 60)
        # button_return.setText("<-")

        # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤ QPixmap
        pixmap = QPixmap("FingerImages/right-arrow.png")  # –í–∫–∞–∂—ñ—Ç—å —à–ª—è—Ö –¥–æ –≤–∞—à–æ–≥–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è

        # –û–±–µ—Ä—Ç–∞—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
        transform = QTransform().rotate(180)
        rotated_pixmap = pixmap.transformed(transform)

        # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —ñ–∫–æ–Ω–∫—É
        icon = QIcon(rotated_pixmap)
        button_return.setIcon(icon)
        button_return.setIconSize(QSize(50, 50))  # –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ —Ä–æ–∑–º—ñ—Ä —ñ–∫–æ–Ω–∫–∏ (50x50 –ø—ñ–∫—Å–µ–ª—ñ–≤)
        button_return.show()

        font = QFont()
        font.setBold(True)
        font.setPointSize(18)
        button_return.setFont(font)

        button_return.setStyleSheet(f"""
                                QPushButton {{
                                    background-color: {self.widgetsColor[1]}; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ */
                                    color: #eb8934; /* –ö–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É */
                                    border-radius: 30px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—è –∫—É—Ç—ñ–≤ */
                                }}
                                QPushButton:hover {{
                                    background-color: #5dade2; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ */
                                }}
                                QPushButton:pressed {{
                                    background-color: #1f618d; /* –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ */
                                }}
                            """)
        button_return.clicked.connect(
            partial(self.hide_select_level_click))

        # ------------------------------------------------------------------------------------------------------------------–§—Ä–µ–π–º –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ñ—Ä–µ–π–º—ñ–≤

        scenario = QFrame(self.select_Level)
        scenario.setGeometry(490, 100, 770, 750)
        scenario.show()
        scenario.setStyleSheet(f"""
                            QFrame {{
                                background-color: {self.widgetsColor[1]}; /* –§–æ–Ω –∫–∞—Ä—Ç–∫–∏ */
                                border-radius: 10px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω—ñ –∫—É—Ç–∏ */
                            }}
                        """)

        # ------------------------------------------------------------------------------------------------------------------–§—Ä–µ–π–º —Ä–æ–∑–ø–æ—á–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–∏–π —Ä—ñ–≤–µ–Ω—å

        userLevel = UserLevelsModule.UserLevelsModule(self.widgetsLanguage, self.widgetsColor)
        startUserLevel_frame = RebuildsComponents.ClickableFrame(scenario)
        startUserLevel_frame.setGeometry(20, 20, 355, 710)
        startUserLevel_frame.show()
        startUserLevel_frame.setStyleSheet("""
                                QFrame {
                                    background-color: red; /* –§–æ–Ω –∫–∞—Ä—Ç–∫–∏ */
                                    border-radius: 10px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω—ñ –∫—É—Ç–∏ */
                                }
                            """)
        opacity_effect = QGraphicsOpacityEffect()
        opacity_effect.setOpacity(0.4)
        startUserLevel_frame.setGraphicsEffect(opacity_effect)
        startUserLevel_frame.clicked.connect(lambda: userLevel.openUserLevelPanel(level_cv_frame))

        # ------------------------------------------------------------------------------------------------------------------–§—Ä–µ–π–º —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–æ–≥–æ —Ä—ñ–≤–Ω—è

        createUserLevel_frame = RebuildsComponents.ClickableFrame(scenario)
        createUserLevel_frame.setGeometry(395, 20, 355, 710)
        createUserLevel_frame.show()
        createUserLevel_frame.setStyleSheet("""
                                QFrame {
                                    background-color: blue; /* –§–æ–Ω –∫–∞—Ä—Ç–∫–∏ */
                                    border-radius: 10px; /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω—ñ –∫—É—Ç–∏ */
                                }
                            """)
        createUserLevel_frame.setGraphicsEffect(opacity_effect)
        createUserLevel_frame.clicked.connect(lambda: userLevel.createUserLevel())

        level_cv_frame.raise_()

    # –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤–µ—Ä—Å—ñ—ó –∑–∞—Å—Ç–æ—Å—É–Ω–∫—É
    def check_for_updates(self):
        Version = "1.0.0"
        try:
            response = requests.get(f"https://api.github.com/repos/Whowrite/Dyplome_gesture/releases/latest")
            response.raise_for_status()
            latest_version = response.json()["tag_name"].lstrip("v")  # –ü—Ä–∏–ø—É—Å–∫–∞—î–º–æ, —â–æ —Ç–µ–≥ –≤–∏–≥–ª—è–¥–∞—î —è–∫ "v1.0.0"

            if version.parse(latest_version) > version.parse(Version):
                print(f"–î–æ—Å—Ç—É–ø–Ω–∞ –Ω–æ–≤–∞ –≤–µ—Ä—Å—ñ—è {latest_version}! –ü–æ—Ç–æ—á–Ω–∞ –≤–µ—Ä—Å—ñ—è: {Version}")
                return latest_version
            else:
                print("–í–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç–µ –æ—Å—Ç–∞–Ω–Ω—é –≤–µ—Ä—Å—ñ—é.")
                return None
        except requests.RequestException as e:
            print(f"–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –æ–Ω–æ–≤–ª–µ–Ω—å: {e}")
            return None

    # –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤—ñ–¥–≤—ñ–¥—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞—Å—Ç–æ—Å—É–Ω–∫—É
    def addUserVisits(self):
        print("–î–æ–±—Ä–æ–≥–æ –¥–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á")
        # –ó–∞–ø–∏—Ç –¥–æ –±–¥


if __name__ == "__main__":
    app = QApplication(sys.argv)
    main = MainWindow()
    main.mainWindow(main)
    sys.exit(app.exec_())